{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charlie Billadeau\\\\desktop\\\\new-react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = () => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.stream.title);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\Charlie Billadeau\\desktop\\new-react-projects\\streams\\client\\src\\components\\streams\\StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","console","log","formValues","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK5B,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACD,KAPsC;AAAA;;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAAxB,CAAP;AACA;;AAbsC;;AAcxC;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAed,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = () => {\r\n    console.log(formValues);\r\n  };\r\n  render() {\r\n   if (!this.props.stream) {\r\n     return <div>Loading...</div>;\r\n   }\r\n   return <div>{this.props.stream.title}</div>\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}